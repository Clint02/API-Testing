{"mappings":"AAAA,MAAM,UAAU;AAEhB,+BAA+B;AAC/B,MAAM,UAAU;IACd,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,WAAW,CAAC;QACxD,QAAQ,GAAG,CAAC,iBAAiB,SAAS,IAAI;IAC5C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;IAC3C;AACF;AAEA,gCAAgC;AAChC,MAAM,WAAW;IACf,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,IAAI,CAAC,CAAC,EAAE,QAAQ,aAAa,CAAC,EAAE;YAC3D,OAAO;YACP,aAAa;QACf;QACA,QAAQ,GAAG,CAAC,kBAAkB,SAAS,IAAI;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;IAC5C;AACF;AAEA,qCAAqC;AACrC,MAAM,UAAU;IACd,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,WAAW,CAAC,EAAE;YACxD,OAAO;YACP,aAAa;QACf;QACA,QAAQ,GAAG,CAAC,iBAAiB,SAAS,IAAI;IAC5C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;IAC3C;AACF;AAEA,kCAAkC;AAClC,MAAM,aAAa;IACjB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,MAAM,CAAC,CAAC,EAAE,QAAQ,WAAW,CAAC;QAC3D,QAAQ,GAAG,CAAC,oBAAoB,SAAS,IAAI;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;IAC9C;AACF;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,wBAAwB;QACxB,MAAM,eAAe,MAAM,MAAM,IAAI,CAAC,CAAC,EAAE,QAAQ,WAAW,CAAC,EAAE;YAC7D,UAAU;YACV,UAAU;QACZ;QACA,MAAM,QAAQ,aAAa,IAAI,CAAC,KAAK;QACrC,QAAQ,GAAG,CAAC,eAAe;QAE3B,8CAA8C;QAC9C,MAAM,aAAa;YACjB,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,MAAM,CAAC;YAAC;QAC9C;QAEA,MAAM,iBAAiB,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,WAAW,CAAC,EAAE;QAChE,QAAQ,GAAG,CAAC,wBAAwB,eAAe,IAAI;IACzD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;IAC1D;AACF;AAEA,mDAAmD;AACnD","sources":["index.js"],"sourcesContent":["const baseURL = 'https://dummyjson.com'\r\n\r\n// Function to test GET request\r\nconst testGet = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseURL}/products/1`)\r\n    console.log('GET response:', response.data)\r\n  } catch (error) {\r\n    console.error('Error with GET request:', error)\r\n  }\r\n}\r\n\r\n// Function to test POST request\r\nconst testPost = async () => {\r\n  try {\r\n    const response = await axios.post(`${baseURL}/products/add`, {\r\n      title: 'New Product',\r\n      description: 'This is a new product.',\r\n    })\r\n    console.log('POST response:', response.data)\r\n  } catch (error) {\r\n    console.error('Error with POST request:', error)\r\n  }\r\n}\r\n\r\n// Function to test PUT/PATCH request\r\nconst testPut = async () => {\r\n  try {\r\n    const response = await axios.put(`${baseURL}/products/1`, {\r\n      title: 'Updated Product',\r\n      description: 'This product has been updated.',\r\n    })\r\n    console.log('PUT response:', response.data)\r\n  } catch (error) {\r\n    console.error('Error with PUT request:', error)\r\n  }\r\n}\r\n\r\n// Function to test DELETE request\r\nconst testDelete = async () => {\r\n  try {\r\n    const response = await axios.delete(`${baseURL}/products/1`)\r\n    console.log('DELETE response:', response.data)\r\n  } catch (error) {\r\n    console.error('Error with DELETE request:', error)\r\n  }\r\n}\r\n\r\n// Execute the functions\r\ntestGet()\r\ntestPost()\r\ntestPut()\r\ntestDelete()\r\n\r\nconst testAuthAndGetData = async () => {\r\n  try {\r\n    // Step 1: Get the token\r\n    const authResponse = await axios.post(`${baseURL}/auth/login`, {\r\n      username: 'kminchelle',\r\n      password: '0lelplR',\r\n    })\r\n    const token = authResponse.data.token\r\n    console.log('Auth token:', token)\r\n\r\n    // Step 2: Use the token to access another API\r\n    const authConfig = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n\r\n    const secureResponse = await axios.get(`${baseURL}/auth/users`, authConfig)\r\n    console.log('Secure GET response:', secureResponse.data)\r\n  } catch (error) {\r\n    console.error('Error with auth or secure GET request:', error)\r\n  }\r\n}\r\n\r\n// Execute the auth and secure GET request function\r\ntestAuthAndGetData()\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}